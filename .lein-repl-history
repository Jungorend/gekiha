(exit)
exit
(* 20 131)
(/ (* 20 138) 60)
(/ 550 138)
(/ 550 138.0)
(* 550 6)
(/ (* 550 6) 60)
(/ 55 12.0)
(ns clojure.user)
(doc assoc)
(ns clojure.repl)
(doc assoc)
(exit)
(def game (setup-game :ryu :ken))
(get-in normals [:assault :boost-text])
((get-in normals [:assault :boost-text]) nil game :p2)
(exit)
(map #(.name %) normals)
(map #(.name (% normals)) normals)
(keys normals)
(map #(.name (% normals)) (keys normals))
(reduce #(vector % :p1) (keys normals))
(map #(vector % :p1) (keys normals))
(create-deck :ryu :p1)
(conj [:p1 :dive] [:p2 :assault])
(append [:p1] [:p2])
(push [:p1] [:p2])
(vector (vector :p1) (vector :p2))
(conj [[:p1 :dive]] [:p2 :assault])
(create-deck :ryu :p1)
(exit)
(create-deck :ryu :p1)
(exit)
(setup-game :ryu :ken)
(exit)
(import 'exceed.card.normals.AttackCard)
(AttackCard. 1 2 3 4 5 6)
(exit)
(create-deck :ryu :p1)
(take 14 (cycle (keys exceed.character.season-three/ryu)))
(take 14 (cycle (keys exceed.characters.season-three/ryu)))
(take 14 (cycle (keys (:cards exceed.characters.season-three/ryu))))
(exit)
